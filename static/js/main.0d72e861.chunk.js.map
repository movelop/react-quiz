{"version":3,"sources":["App.js","components/Start/Start.js","components/utils/index.js","components/QuestionBox/QuestionBox.js","components/End/End.js","components/LandingPage/undraw.svg","components/LandingPage/LandingPage.js","components/Modal.js","components/Data/QuizData.js","reportWebVitals.js","index.js"],"names":["interval","Start","onQuizStart","numberOfQuestions","className","onClick","formatTime","time","Math","floor","QuestionBox","data","onAnswerUpdate","currentQuestion","onSetCurrentQuestion","onSetStep","useState","selected","setSelected","error","setError","seconds","setSeconds","radioWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","setTimeout","changeHandler","event","target","value","question","ref","options","map","choice","i","type","name","onChange","prevState","q","a","End","results","onReset","onAnswerCheck","correctAnswers","setCorrectAnswers","correct","forEach","result","answer","length","LandingPage","onGetStarted","src","banner","alt","Modal","onClose","id","QuizData","sort","random","slice","App","step","setStep","setCurrentQuestion","answers","setAnswers","showModal","setShowModal","setTime","clearInterval","setInterval","prevTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d72e861.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Start from './components/Start/Start';\nimport QuestionBox from './components/QuestionBox/QuestionBox';\nimport End from './components/End/End';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Modal from './components/Modal';\n\nimport QuizData from './components/Data/QuizData';\n \n\nlet interval;\n\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n   if( step === 4){\n     clearInterval(interval)\n   }\n  }, [step])\n\n  const getStarted = () => {\n    setStep(2);\n  }\n\n\n  const quizStarterHandler = () =>{\n    setStep(3);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1);\n    }, 1000)\n  }\n\n  const resetQuizHandler = () => {\n    setCurrentQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1);\n    }, 1000);\n  }\n\n  return (\n    <>\n    \n    <div className=\"App\">\n    <div>\n      { step === 1 && <LandingPage onGetStarted = {getStarted} />}\n    </div>   \n     { step === 2 && <Start onQuizStart ={quizStarterHandler}\n     numberOfQuestions = {QuizData.length}\n      />}\n     { step === 3 && <QuestionBox\n     data = {QuizData[currentQuestion]}\n     onAnswerUpdate = {setAnswers}\n     numberOfQuestions = {QuizData.length}\n     currentQuestion = {currentQuestion}\n     onSetCurrentQuestion = {setCurrentQuestion}\n     onSetStep = {setStep} />}\n     { step === 4 && <End \n     results ={answers}\n     data = {QuizData}\n     onReset = {resetQuizHandler}\n     onAnswerCheck ={() => setShowModal(true)}\n     time ={time}\n     />}\n\n     {showModal && <Modal \n     onClose = {() => setShowModal(false) } \n     results = {answers}\n     data = {QuizData}\n     />}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport './Start.css';\r\n\r\n const Start = ({onQuizStart, numberOfQuestions}) => {\r\n    return (\r\n        <div className = \"App\">\r\n        <div className= \"card\">\r\n            <div className= \"card-content\">\r\n                <div className=\"content\">\r\n                    <h1>Start the test</h1>\r\n                    <p>You have 2 mins to complete {numberOfQuestions} questions</p>\r\n                    <p>Good luck</p>\r\n                    <button className= \"button is-info is-medium\" \r\n                    onClick ={onQuizStart}>Start</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Start;","\r\n\r\nconst formatTime = (time) =>{\r\n    if (time <= 60) {\r\n        return time < 10 ? `0${time}s` : `${time}s`;\r\n    } else {\r\n        return Math.floor(time / 60) + `m` + (time % 60) + `s`\r\n    }\r\n}\r\nconst formatTime2 = (time) =>{\r\n    if (time <= 60) {\r\n        return time < 10 ? `0:0${time}` : `0:${time}`;\r\n    } else {\r\n        return Math.floor(time / 60) + `:` + (time % 60) \r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    formatTime,\r\n    formatTime2\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport './QuestionBox.css';\r\nimport {formatTime2} from '../utils';\r\n\r\n\r\n\r\n const QuestionBox = ({data, onAnswerUpdate,numberOfQuestions,currentQuestion,onSetCurrentQuestion,onSetStep}) => {\r\n    const [selected, setSelected] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [seconds, setSeconds] = useState(120)\r\n    const radioWrapper = useRef();\r\n\r\n    useEffect(() =>{\r\n        const findCheckedInput = radioWrapper.current.querySelector('input:checked');\r\n        if(findCheckedInput){\r\n            findCheckedInput.checked = false;\r\n        }\r\n    }, [data])\r\n    useEffect(() => {\r\n        if(seconds > 0) {\r\n            setTimeout(() => setSeconds(seconds - 1), 1000)\r\n        } else {\r\n            onSetStep(4)\r\n        }\r\n    })\r\n\r\n\r\n    const changeHandler = (event) =>{\r\n        setSelected(event.target.value);\r\n        if(error){\r\n            setError('');\r\n        }\r\n    };\r\n\r\n    const nextClickHandler = (event) =>{\r\n        if(selected === \"\") {\r\n         return   setError(`Please select an answer!!!`);\r\n        }\r\n        onAnswerUpdate(prevState =>[...prevState, {q: data.question, a: selected}]);\r\n        setSelected(\"\");\r\n        if(currentQuestion < numberOfQuestions -1){\r\n            onSetCurrentQuestion(currentQuestion + 1);\r\n        } else {\r\n            onSetStep(4);\r\n        }\r\n    }\r\n    return (\r\n        <div className = \"App\">\r\n        <div className= \"card\">\r\n            <div className = \"card-content\">\r\n                <div className =\"content\">\r\n                <h4>{currentQuestion + 1} of {numberOfQuestions}</h4>\r\n                <p> Time left: <h4 className =\"has-text-danger\">{formatTime2(seconds)}</h4></p>\r\n                  <h2 className = \"mb-5\">{data.question}</h2>\r\n                  <div className =\"control\" ref ={radioWrapper}>\r\n                      {data.options.map((choice, i) => (\r\n                        <label className =\"radio has-background-light\">\r\n                            <input type =\"radio\" name =\"answer\" value={choice} onChange = {changeHandler} />\r\n                            {choice}\r\n                        </label>\r\n                      ))}\r\n                      \r\n                  </div> \r\n                   {error &&<div className =\"has-text-danger\">{error}</div>}\r\n                   <button className =\"button is-link is-medium is-fullwidth mt-4\" onClick ={nextClickHandler} >Next</button>\r\n                </div> \r\n            </div>\r\n         </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default QuestionBox;","import React, {useState, useEffect} from 'react';\r\nimport './End.css';\r\nimport {formatTime} from '../utils';\r\n\r\n\r\n const End = ({results, data, onReset, onAnswerCheck, time}) => {\r\n     const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n     useEffect(() => {\r\n         let correct = 0;\r\n         results.forEach((result, i) =>{\r\n             if (result.a === data[i].answer){\r\n                 correct ++;\r\n             }\r\n         });\r\n         setCorrectAnswers(correct);\r\n         // eslint-disable-next-line \r\n     }, []);\r\n    return (\r\n        <div className = \"App\">\r\n        <div className = \"card\">\r\n            <div className = \"card-content\">\r\n                <div className = \"content\">\r\n                    <h3>Your results</h3>\r\n                    <p> {correctAnswers} of {data.length}</p>\r\n                    <p>{Math.floor((correctAnswers / data.length) * 100)}%</p>\r\n                    <p><span>Your time:</span> {formatTime(time)}</p>\r\n                    <button className = \"button is-info mr-2\" onClick ={onAnswerCheck}>Check Your Answer</button>\r\n                    <button className = \"button is-success\" onClick = {onReset}>Try again</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default End","export default __webpack_public_path__ + \"static/media/undraw.e95166c4.svg\";","import React from 'react';\r\nimport './LandingPage.css';\r\nimport banner from './undraw.svg';\r\n\r\n\r\nconst LandingPage = ({onGetStarted}) => {\r\n\treturn (\r\n\t\t<div className = 'hero is-large'>\r\n\t\t\t<div className= 'hero-body'>\r\n\t\t\t\t<div className =\"container\">\r\n\t\t\t\t\t<div className = \"columns is-vcentered\">\r\n\t\t\t\t\t<div className =\"column is-6\">\r\n\t\t\t\t\t\t\t<p className =\"subtitle is-3 is-family-primary\">Take Your XYZ exam practice with us at</p>\r\n\t\t\t\t\t\t\t<h1 className =\"title is-title has-margin-top-30 is-size-3 has-text-weight-bold\">\r\n\t\t\t\t\t\t\t XYZ Practice Center\t\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t\t<p className =\"subtitle is-4 has-margin-top-20 is-family-primary\" >\r\n\t\t\t\t\t\t\tYour answers will automatically be scored at the end of your test, \r\n\t\t\t\t\t\t\tand the timer will keep you on track with section time limits.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className =\"subtitle is-4 has-margin-top-20 is-family-primary\" >\r\n\t\t\t\t\t\t\tBest of all, after your practice test, you'll get corrections \r\n\t\t\t\t\t\t\tto all questions you got wrong. And detailed explanation to all answers\r\n\t\t\t\t\t\t\twould be provided too.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<button className =\"button is-primary is-medium\" onClick = {onGetStarted}>\r\n\t\t\t\t\t\t\t\tGet Started\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"column is-5\">\r\n\t\t\t\t\t\t\t<figure className =\"image\">\r\n\t\t\t\t\t\t\t\t<img src = {banner} alt=\"banner\" />\r\n\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\r\n\r\n const Modal = ({onClose, results, data}) => {\r\n    return (\r\n        <div className= \"modal is-active\">\r\n            <div className =\"modal-background\" onClick ={onClose}></div>\r\n            <div className = \"modal-card\">\r\n                <header className =\"modal-card-head\">\r\n                    <p className = \"modal-card-title\">Your answers</p>\r\n                    <button className = \"delete\" onClick = {onClose}></button>\r\n                </header>\r\n                <section className = \"modal-card-body content\">\r\n                    <ul>\r\n                        {results.map((result, i) => (\r\n                            <li key ={i} className =\"mb-6\">\r\n                                <p><strong>{result.q}</strong></p>\r\n                                <p className = {result.a === data[i].answer ? `has-background-success has-text-white`: \r\n                                `has-background-danger has-text-white p-2`}>Your answer:{result.a}</p>\r\n                                {result.a !== data[i].answer && <p className =\"has-background-link has-text-white p-2\">Correst answer: {data[i].answer}</p>}\r\n                                <p className =\"has-background-primary has-text-white p-2\">Explanation: {data[i].id}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Modal;","const QuizBank = [\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Nigeria?`,\r\n        options: [`New Delhi`, `Abuja`, `Aba`, `Onisha`],\r\n        answer: `Abuja`\r\n    },\r\n    {\r\n        id: 1,\r\n        question: `What is the capital of India?`,\r\n        options: [`Punjab`, `Awka`, `Owerri`, `New Delhi`],\r\n        answer: `New Delhi`\r\n    },\r\n    {\r\n        id: 2,\r\n        question: `What is the capital of Australia?`,\r\n        options: [`Mumbai`, `Abuja`, `Warri`, `Sydney`],\r\n        answer: `Sydney`\r\n    },\r\n    {\r\n        id: 3,\r\n        question: `What is the capital of Turkey?`,\r\n        options: [`Bangalore`, `Ankara`, `Istanbul`, `Enugu`],\r\n        answer: `Ankara`\r\n    },\r\n    {\r\n        id: 4,\r\n        question: `What is the capital of Syria?`,\r\n        options: [`Rimadi`, `Damascus`, `Owerri`, `Tel Aviv`],\r\n        answer: `Damascus`\r\n    },\r\n    {\r\n        id: 5,\r\n        question:  `What year did Nigeria win her Last AFCON?`,\r\n        options: [`2013`,`2004`, `1994`, `2015`],\r\n        answer: `2013`\r\n    },\r\n    {\r\n        id: 6,\r\n        question: `What is the capital of England?`,\r\n        options: [`Manchester`, `Newcastle`, `London`, 'Swindon'],\r\n        answer: `London`\r\n    },\r\n    {\r\n        id: 7,\r\n        question: `What year did Nigeria gain independence?`,\r\n        options: [`1967`, `1947`, `1950`, `1960`],\r\n        answer: `1960`\r\n    },\r\n    {\r\n        id: 8,\r\n        question:`Who was the first military head of state in Nigeria`,\r\n        options: [`Gen. Ironsi`, `Gen. Obasanjo`, `Gen. Abacha`, `Gen. Muritala `],\r\n        answer: `Gen. Ironsi`\r\n    },\r\n    {\r\n        id: 9,\r\n        question: `What is the capital of USA?`,\r\n        options: [`New York`, `Washington D.C.`, `New Jersey`, `Texas`],\r\n        answer: `Washington D.C.`    \r\n    },\r\n    {\r\n        id: 10,\r\n        question: `What month do Muslims fast?`,\r\n        options: [`January`, `Shawal`, `Ramadan`,`August`],\r\n        answer: `Ramadan`\r\n    },\r\n    {\r\n        id: 11,\r\n        question:`What is the capital of France?`,\r\n        options: [`New York`, `Dublin`, `London`, `Paris`],\r\n        answer: `Paris`\r\n    },\r\n    {\r\n        id: 12,\r\n        question:`Who is the CEO of Tesla?`,\r\n        options: [`Jeff Bezos`, `Elon Musk`, `Bill Gates`, `Peter Parker`],\r\n        answer: `Elon Musk`\r\n    },\r\n    {\r\n        id: 13,\r\n        question:`The Iphone was created by which company?`,\r\n        options: [`Apple`, `Intel`, `Microsoft`, `Amazon`],\r\n        answer: `Apple`\r\n    },\r\n    {\r\n        id: 14,\r\n        question:`How many Harry Potter books are there?`,\r\n        options: [`1`, `4`, `6`, `7`],\r\n        answer: `7`\r\n    },\r\n    {\r\n        id: 15,\r\n        question: `What is the capital of Croatia ?`,\r\n        options: [\"Split\", \"Osijek\", \"Zagreb\", \"Rijeka\"],\r\n        answer: `Zagreb`\r\n    },\r\n    {\r\n        id: 16,\r\n        question: `What is the capital of Slovenia ?`,\r\n        options: [\"Celje\", \"Ljubljana\", \"Maribor\", \"Koper\"],\r\n        answer:   `Ljubljana`\r\n    },\r\n    {\r\n        id: 17,\r\n        question: `What is the capital of Austria ?`,\r\n        options: [`Graz`, `Salzburg`, \"Innsbruck\", \"Vienna\"],\r\n        answer: \"Vienna\"\r\n    },\r\n    {\r\n        id: 18,\r\n        question: \"What is the capital of Serbia ?\",\r\n        options: [\"Belgrade\", \"Novi Sad\", \"Niš\", \"Subotica\"],\r\n        answer: \"Belgrade\"\r\n    },\r\n    {\r\n        id: 19,\r\n        question: \"What is the capital of Bosnia and Herzegovina ?\",\r\n        options: [\"Mostar\", \"Sarajevo\", \"Banja Luka\", \"Tuzla\"],\r\n        answer: \"Sarajevo\"\r\n    },\r\n    {\r\n        id: 20,\r\n        question: \"What is the capital of Hungary ?\",\r\n        options: [\"Zalaegerszeg\", \"Eger\", \"Szeged\", \"Budapest\"],\r\n        answer: \"Budapest\"\r\n    },\r\n    {\r\n        id: 21,\r\n        question: \"What is the capital of Slovakia ?\",\r\n        options: [\"Košice\", \"Nitra\", \"Bratislava\", \"Poprad\"],\r\n        answer: \"Bratislava\"\r\n    },\r\n    {\r\n        id: 22,\r\n        question: \"What is the capital of Romania ?\",\r\n        options: [\"Bucharest\", \"Craiova\", \"Constanta\", \"Braila\"],\r\n        answer: \"Bucharest\"\r\n    },\r\n    {\r\n        id: 23,\r\n        question: \"What is the capital of Germany ?\",\r\n        options: [\"Wolfsburg\", \"Munich\", \"Berlin\", \"Frankfurt\"],\r\n        answer: \"Berlin\"\r\n    }\r\n\r\n\r\n]\r\n\r\nlet QuizData = QuizBank.sort(() => Math.random() - Math.random()).slice(0, 10);\r\n\r\n\r\nexport default QuizData;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}